//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hotel.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=HZ-ПК\\;Initial Catalog=hotel;Integrated Security=True")]
        public string ConnectionString {
            get {
                return ((string)(this["ConnectionString"]));
            }
            set {
                this["ConnectionString"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("9, 56, 82")]
        public global::System.Drawing.Color MainColor {
            get {
                return ((global::System.Drawing.Color)(this["MainColor"]));
            }
            set {
                this["MainColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("White")]
        public global::System.Drawing.Color FontColor {
            get {
                return ((global::System.Drawing.Color)(this["FontColor"]));
            }
            set {
                this["FontColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("23, 88, 144")]
        public global::System.Drawing.Color AccientColor {
            get {
                return ((global::System.Drawing.Color)(this["AccientColor"]));
            }
            set {
                this["AccientColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("152, 156, 157")]
        public global::System.Drawing.Color AddColor {
            get {
                return ((global::System.Drawing.Color)(this["AddColor"]));
            }
            set {
                this["AddColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Verdana, 36pt")]
        public global::System.Drawing.Font HeaderFont {
            get {
                return ((global::System.Drawing.Font)(this["HeaderFont"]));
            }
            set {
                this["HeaderFont"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Book Antiqua, 21.75pt, style=Italic")]
        public global::System.Drawing.Font AccientFont {
            get {
                return ((global::System.Drawing.Font)(this["AccientFont"]));
            }
            set {
                this["AccientFont"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Verdana, 18pt")]
        public global::System.Drawing.Font MainFont {
            get {
                return ((global::System.Drawing.Font)(this["MainFont"]));
            }
            set {
                this["MainFont"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Transparent")]
        public global::System.Drawing.Color TransparentColor {
            get {
                return ((global::System.Drawing.Color)(this["TransparentColor"]));
            }
            set {
                this["TransparentColor"] = value;
            }
        }
    }
}
